<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.industryhive.dao.TopicMapper">
  <resultMap id="BaseResultMap" type="net.industryhive.bean.Topic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="submitTime" jdbcType="TIMESTAMP" property="submittime" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="replyCount" jdbcType="INTEGER" property="replycount" />
    <result column="viewCount" jdbcType="INTEGER" property="viewcount" />
    <result column="locked" jdbcType="BIT" property="locked" />
    <result column="hided" jdbcType="BIT" property="hided" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.industryhive.bean.Topic">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, submitTime, label, title, replyCount, viewCount, locked, hided, deleted
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.industryhive.bean.TopicExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.industryhive.bean.TopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from topic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from topic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.industryhive.bean.TopicExample">
    delete from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.industryhive.bean.Topic">
    insert into topic (id, user_id, submitTime,
      label, title, replyCount,
      viewCount, locked, hided, deleted,
      content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{submittime,jdbcType=TIMESTAMP},
      #{label,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{replycount,jdbcType=INTEGER},
      #{viewcount,jdbcType=INTEGER}, #{locked,jdbcType=BIT}, #{hided,jdbcType=BIT}, #{deleted,jdbcType=BIT},
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.industryhive.bean.Topic" useGeneratedKeys="true" keyProperty="id">
    insert into topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="submittime != null">
        submitTime,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="replycount != null">
        replyCount,
      </if>
      <if test="viewcount != null">
        viewCount,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="hided != null">
        hided,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="submittime != null">
        #{submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="replycount != null">
        #{replycount,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null">
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
      <if test="hided != null">
        #{hided,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.industryhive.bean.TopicExample" resultType="java.lang.Long">
    select count(*) from topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update topic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.submittime != null">
        submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.replycount != null">
        replyCount = #{record.replycount,jdbcType=INTEGER},
      </if>
      <if test="record.viewcount != null">
        viewCount = #{record.viewcount,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=BIT},
      </if>
      <if test="record.hided != null">
        hided = #{record.hided,jdbcType=BIT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update topic
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      label = #{record.label,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      replyCount = #{record.replycount,jdbcType=INTEGER},
      viewCount = #{record.viewcount,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=BIT},
      hided = #{record.hided,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update topic
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      label = #{record.label,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      replyCount = #{record.replycount,jdbcType=INTEGER},
      viewCount = #{record.viewcount,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=BIT},
      hided = #{record.hided,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.industryhive.bean.Topic">
    update topic
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="submittime != null">
        submitTime = #{submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="replycount != null">
        replyCount = #{replycount,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null">
        viewCount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="hided != null">
        hided = #{hided,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.industryhive.bean.Topic">
    update topic
    set user_id = #{userId,jdbcType=INTEGER},
      submitTime = #{submittime,jdbcType=TIMESTAMP},
      label = #{label,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      replyCount = #{replycount,jdbcType=INTEGER},
      viewCount = #{viewcount,jdbcType=INTEGER},
      locked = #{locked,jdbcType=BIT},
      hided = #{hided,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.industryhive.bean.Topic">
    update topic
    set user_id = #{userId,jdbcType=INTEGER},
      submitTime = #{submittime,jdbcType=TIMESTAMP},
      label = #{label,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      replyCount = #{replycount,jdbcType=INTEGER},
      viewCount = #{viewcount,jdbcType=INTEGER},
      locked = #{locked,jdbcType=BIT},
      hided = #{hided,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--============================================================================================-->
  <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithUsername" type="net.industryhive.been.wrap.WrapTopic">
    <result column="username" jdbcType="VARCHAR" property="username"></result>
    <result column="lastReply" jdbcType="VARCHAR" property="lastReply"></result>
    <result column="lastSubmit" jdbcType="TIMESTAMP" property="lastSubmit"></result>
  </resultMap>
  <select id="findListWithUsername" parameterType="java.lang.Integer" resultMap="ResultMapWithUsername">
        SELECT a.*,IFNULL(b.lastSubmit,a.submitTime) lastSubmit,IFNULL(b.lastReply,a.username) lastReply FROM
        (SELECT topic.*,user.username FROM topic,user WHERE topic.deleted=0 AND topic.user_id=user.id) a
        LEFT JOIN
        (SELECT lastSubmit,user.username lastReply,reply.topic_id rti FROM
        (SELECT MAX(reply.submitTime) lastSubmit FROM reply GROUP BY reply.topic_id) ma,reply,user
        WHERE lastSubmit=reply.submitTime AND reply.user_id=user.id) b
        ON a.id=b.rti ORDER BY lastSubmit DESC limit #{startRow},45
    </select>
  <select id="findWithUsername" parameterType="java.lang.Integer" resultType="net.industryhive.been.wrap.WrapTopic">
      select topic.*,user.username from topic,user where topic.id=#{id} and topic.user_id=user.id
  </select>
  <select id="selectByPrimaryKeyForUpdate" parameterType="java.lang.Integer" resultType="net.industryhive.bean.Topic">
      select id,replyCount,locked,deleted from topic where id=#{id} for update;
  </select>
  <update id="updateViewCountByPrimaryKey" parameterType="java.lang.Integer">
      update topic set viewCount=viewCount+1 where id=#{id}
  </update>
  <update id="updateReplyCountByPrimaryKey" parameterType="java.lang.Integer">
      update topic set replyCount=replyCount+1 where id=#{id}
  </update>
  <!--============================================================================================-->
</mapper>
