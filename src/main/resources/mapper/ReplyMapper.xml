<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.industryhive.dao.ReplyMapper">
    <resultMap id="BaseResultMap" type="net.industryhive.bean.Reply">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="topic_id" jdbcType="INTEGER" property="topic_id"/>
        <result column="user_id" jdbcType="INTEGER" property="user_id"/>
        <result column="submitTime" jdbcType="TIMESTAMP" property="submitTime"/>
        <result column="floor" jdbcType="INTEGER" property="floor"/>
        <result column="quote" jdbcType="INTEGER" property="quote"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.industryhive.bean.Reply">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, topic_id, user_id, submitTime, floor, quote, deleted
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="net.industryhive.bean.ReplyExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="net.industryhive.bean.ReplyExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from reply
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="net.industryhive.bean.ReplyExample">
        delete from reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.industryhive.bean.Reply">
    insert into reply (id, topic_id, user_id,
      submitTime, floor, quote,
      deleted, content)
    values (#{id,jdbcType=INTEGER}, #{topic_id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER},
      #{submitTime,jdbcType=TIMESTAMP}, #{floor,jdbcType=INTEGER}, #{quote,jdbcType=INTEGER},
      #{deleted,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="net.industryhive.bean.Reply">
        insert into reply
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="topic_id != null">
                topic_id,
            </if>
            <if test="user_id != null">
                user_id,
            </if>
            <if test="submitTime != null">
                submitTime,
            </if>
            <if test="floor != null">
                floor,
            </if>
            <if test="quote != null">
                quote,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="topic_id != null">
                #{topic_id,jdbcType=INTEGER},
            </if>
            <if test="user_id != null">
                #{user_id,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="floor != null">
                #{floor,jdbcType=INTEGER},
            </if>
            <if test="quote != null">
                #{quote,jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.industryhive.bean.ReplyExample" resultType="java.lang.Long">
        select count(*) from reply
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update reply
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.topic_id != null">
                topic_id = #{record.topic_id,jdbcType=INTEGER},
            </if>
            <if test="record.user_id != null">
                user_id = #{record.user_id,jdbcType=INTEGER},
            </if>
            <if test="record.submitTime != null">
                submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.floor != null">
                floor = #{record.floor,jdbcType=INTEGER},
            </if>
            <if test="record.quote != null">
                quote = #{record.quote,jdbcType=INTEGER},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=BIT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update reply
        set id = #{record.id,jdbcType=INTEGER},
        topic_id = #{record.topic_id,jdbcType=INTEGER},
        user_id = #{record.user_id,jdbcType=INTEGER},
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
        floor = #{record.floor,jdbcType=INTEGER},
        quote = #{record.quote,jdbcType=INTEGER},
        deleted = #{record.deleted,jdbcType=BIT},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update reply
        set id = #{record.id,jdbcType=INTEGER},
        topic_id = #{record.topic_id,jdbcType=INTEGER},
        user_id = #{record.user_id,jdbcType=INTEGER},
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
        floor = #{record.floor,jdbcType=INTEGER},
        quote = #{record.quote,jdbcType=INTEGER},
        deleted = #{record.deleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.industryhive.bean.Reply">
        update reply
        <set>
            <if test="topic_id != null">
                topic_id = #{topic_id,jdbcType=INTEGER},
            </if>
            <if test="user_id != null">
                user_id = #{user_id,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                submitTime = #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="floor != null">
                floor = #{floor,jdbcType=INTEGER},
            </if>
            <if test="quote != null">
                quote = #{quote,jdbcType=INTEGER},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.industryhive.bean.Reply">
    update reply
    set topic_id = #{topic_id,jdbcType=INTEGER},
      user_id = #{user_id,jdbcType=INTEGER},
      submitTime = #{submitTime,jdbcType=TIMESTAMP},
      floor = #{floor,jdbcType=INTEGER},
      quote = #{quote,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="net.industryhive.bean.Reply">
    update reply
    set topic_id = #{topic_id,jdbcType=INTEGER},
      user_id = #{user_id,jdbcType=INTEGER},
      submitTime = #{submitTime,jdbcType=TIMESTAMP},
      floor = #{floor,jdbcType=INTEGER},
      quote = #{quote,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <!--========================================================================================-->
    <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithUsername" type="net.industryhive.bean.wrap.WrapReply">
        <result column="username" jdbcType="VARCHAR" property="username"/>
    </resultMap>
    <select id="findWithUsername" resultMap="ResultMapWithUsername">
    select reply.*,user.username from reply,user
    where reply.topic_id=#{id} and reply.user_id=user.id limit #{startRow},50
  </select>
    <!--========================================================================================-->
</mapper>
