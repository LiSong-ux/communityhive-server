<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.industryhive.dao.NoticeMapper">
  <resultMap id="BaseResultMap" type="net.industryhive.bean.Notice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="submitTime" jdbcType="TIMESTAMP" property="submittime" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="position" jdbcType="INTEGER" property="position" />
    <result column="replyCount" jdbcType="INTEGER" property="replycount" />
    <result column="viewCount" jdbcType="INTEGER" property="viewcount" />
    <result column="locked" jdbcType="BIT" property="locked" />
    <result column="hided" jdbcType="BIT" property="hided" />
    <result column="deleted" jdbcType="BIT" property="deleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.industryhive.bean.Notice">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, submitTime, label, title, position, replyCount, viewCount, locked, hided, 
    deleted
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.industryhive.bean.NoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.industryhive.bean.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.industryhive.bean.NoticeExample">
    delete from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.industryhive.bean.Notice">
    insert into notice (id, user_id, submitTime, 
      label, title, position, 
      replyCount, viewCount, locked, 
      hided, deleted, content
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{submittime,jdbcType=TIMESTAMP}, 
      #{label,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, 
      #{replycount,jdbcType=INTEGER}, #{viewcount,jdbcType=INTEGER}, #{locked,jdbcType=BIT}, 
      #{hided,jdbcType=BIT}, #{deleted,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.industryhive.bean.Notice">
    insert into notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="submittime != null">
        submitTime,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="replycount != null">
        replyCount,
      </if>
      <if test="viewcount != null">
        viewCount,
      </if>
      <if test="locked != null">
        locked,
      </if>
      <if test="hided != null">
        hided,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="submittime != null">
        #{submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=INTEGER},
      </if>
      <if test="replycount != null">
        #{replycount,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null">
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        #{locked,jdbcType=BIT},
      </if>
      <if test="hided != null">
        #{hided,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.industryhive.bean.NoticeExample" resultType="java.lang.Long">
    select count(*) from notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.submittime != null">
        submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=INTEGER},
      </if>
      <if test="record.replycount != null">
        replyCount = #{record.replycount,jdbcType=INTEGER},
      </if>
      <if test="record.viewcount != null">
        viewCount = #{record.viewcount,jdbcType=INTEGER},
      </if>
      <if test="record.locked != null">
        locked = #{record.locked,jdbcType=BIT},
      </if>
      <if test="record.hided != null">
        hided = #{record.hided,jdbcType=BIT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      label = #{record.label,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=INTEGER},
      replyCount = #{record.replycount,jdbcType=INTEGER},
      viewCount = #{record.viewcount,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=BIT},
      hided = #{record.hided,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notice
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      submitTime = #{record.submittime,jdbcType=TIMESTAMP},
      label = #{record.label,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=INTEGER},
      replyCount = #{record.replycount,jdbcType=INTEGER},
      viewCount = #{record.viewcount,jdbcType=INTEGER},
      locked = #{record.locked,jdbcType=BIT},
      hided = #{record.hided,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.industryhive.bean.Notice">
    update notice
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="submittime != null">
        submitTime = #{submittime,jdbcType=TIMESTAMP},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="replycount != null">
        replyCount = #{replycount,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null">
        viewCount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=BIT},
      </if>
      <if test="hided != null">
        hided = #{hided,jdbcType=BIT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.industryhive.bean.Notice">
    update notice
    set user_id = #{userId,jdbcType=INTEGER},
      submitTime = #{submittime,jdbcType=TIMESTAMP},
      label = #{label,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      position = #{position,jdbcType=INTEGER},
      replyCount = #{replycount,jdbcType=INTEGER},
      viewCount = #{viewcount,jdbcType=INTEGER},
      locked = #{locked,jdbcType=BIT},
      hided = #{hided,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.industryhive.bean.Notice">
    update notice
    set user_id = #{userId,jdbcType=INTEGER},
      submitTime = #{submittime,jdbcType=TIMESTAMP},
      label = #{label,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      position = #{position,jdbcType=INTEGER},
      replyCount = #{replycount,jdbcType=INTEGER},
      viewCount = #{viewcount,jdbcType=INTEGER},
      locked = #{locked,jdbcType=BIT},
      hided = #{hided,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>