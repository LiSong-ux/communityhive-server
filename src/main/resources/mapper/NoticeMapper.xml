<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.industryhive.dao.NoticeMapper">
    <resultMap id="BaseResultMap" type="net.industryhive.bean.Notice">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_id" jdbcType="INTEGER" property="user_id"/>
        <result column="submitTime" jdbcType="TIMESTAMP" property="submitTime"/>
        <result column="lastUser_id" jdbcType="INTEGER" property="lastUser_id"/>
        <result column="lastSubmitTime" jdbcType="TIMESTAMP" property="lastSubmitTime"/>
        <result column="label" jdbcType="VARCHAR" property="label"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="position" jdbcType="INTEGER" property="position"/>
        <result column="viewCount" jdbcType="INTEGER" property="viewCount"/>
        <result column="locked" jdbcType="BIT" property="locked"/>
        <result column="hided" jdbcType="BIT" property="hided"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.industryhive.bean.Notice">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, submitTime, lastUser_id, lastSubmitTime, label, title, position, viewCount,
        locked, hided, deleted
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="net.industryhive.bean.NoticeExample" resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="net.industryhive.bean.NoticeExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from notice
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from notice
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="net.industryhive.bean.NoticeExample">
        delete from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="net.industryhive.bean.Notice">
        insert into notice (id, user_id, submitTime,
        lastUser_id, lastSubmitTime, label,
        title, position, viewCount,
        locked, hided, deleted, content
        )
        values (#{id,jdbcType=INTEGER}, #{user_id,jdbcType=INTEGER}, #{submitTime,jdbcType=TIMESTAMP},
        #{lastUser_id,jdbcType=INTEGER}, #{lastSubmitTime,jdbcType=TIMESTAMP}, #{label,jdbcType=VARCHAR},
        #{title,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, #{viewCount,jdbcType=INTEGER},
        #{locked,jdbcType=BIT}, #{hided,jdbcType=BIT}, #{deleted,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="net.industryhive.bean.Notice">
        insert into notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="user_id != null">
                user_id,
            </if>
            <if test="submitTime != null">
                submitTime,
            </if>
            <if test="lastUser_id != null">
                lastUser_id,
            </if>
            <if test="lastSubmitTime != null">
                lastSubmitTime,
            </if>
            <if test="label != null">
                label,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="position != null">
                position,
            </if>
            <if test="viewCount != null">
                viewCount,
            </if>
            <if test="locked != null">
                locked,
            </if>
            <if test="hided != null">
                hided,
            </if>
            <if test="deleted != null">
                deleted,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="user_id != null">
                #{user_id,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUser_id != null">
                #{lastUser_id,jdbcType=INTEGER},
            </if>
            <if test="lastSubmitTime != null">
                #{lastSubmitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="label != null">
                #{label,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                #{position,jdbcType=INTEGER},
            </if>
            <if test="viewCount != null">
                #{viewCount,jdbcType=INTEGER},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=BIT},
            </if>
            <if test="hided != null">
                #{hided,jdbcType=BIT},
            </if>
            <if test="deleted != null">
                #{deleted,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="net.industryhive.bean.NoticeExample" resultType="java.lang.Long">
        select count(*) from notice
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update notice
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.user_id != null">
                user_id = #{record.user_id,jdbcType=INTEGER},
            </if>
            <if test="record.submitTime != null">
                submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastUser_id != null">
                lastUser_id = #{record.lastUser_id,jdbcType=INTEGER},
            </if>
            <if test="record.lastSubmitTime != null">
                lastSubmitTime = #{record.lastSubmitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.label != null">
                label = #{record.label,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.position != null">
                position = #{record.position,jdbcType=INTEGER},
            </if>
            <if test="record.viewCount != null">
                viewCount = #{record.viewCount,jdbcType=INTEGER},
            </if>
            <if test="record.locked != null">
                locked = #{record.locked,jdbcType=BIT},
            </if>
            <if test="record.hided != null">
                hided = #{record.hided,jdbcType=BIT},
            </if>
            <if test="record.deleted != null">
                deleted = #{record.deleted,jdbcType=BIT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update notice
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.user_id,jdbcType=INTEGER},
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
        lastUser_id = #{record.lastUser_id,jdbcType=INTEGER},
        lastSubmitTime = #{record.lastSubmitTime,jdbcType=TIMESTAMP},
        label = #{record.label,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        position = #{record.position,jdbcType=INTEGER},
        viewCount = #{record.viewCount,jdbcType=INTEGER},
        locked = #{record.locked,jdbcType=BIT},
        hided = #{record.hided,jdbcType=BIT},
        deleted = #{record.deleted,jdbcType=BIT},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update notice
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.user_id,jdbcType=INTEGER},
        submitTime = #{record.submitTime,jdbcType=TIMESTAMP},
        lastUser_id = #{record.lastUser_id,jdbcType=INTEGER},
        lastSubmitTime = #{record.lastSubmitTime,jdbcType=TIMESTAMP},
        label = #{record.label,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        position = #{record.position,jdbcType=INTEGER},
        viewCount = #{record.viewCount,jdbcType=INTEGER},
        locked = #{record.locked,jdbcType=BIT},
        hided = #{record.hided,jdbcType=BIT},
        deleted = #{record.deleted,jdbcType=BIT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="net.industryhive.bean.Notice">
        update notice
        <set>
            <if test="user_id != null">
                user_id = #{user_id,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                submitTime = #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUser_id != null">
                lastUser_id = #{lastUser_id,jdbcType=INTEGER},
            </if>
            <if test="lastSubmitTime != null">
                lastSubmitTime = #{lastSubmitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="label != null">
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=INTEGER},
            </if>
            <if test="viewCount != null">
                viewCount = #{viewCount,jdbcType=INTEGER},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=BIT},
            </if>
            <if test="hided != null">
                hided = #{hided,jdbcType=BIT},
            </if>
            <if test="deleted != null">
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.industryhive.bean.Notice">
        update notice
        set user_id = #{user_id,jdbcType=INTEGER},
        submitTime = #{submitTime,jdbcType=TIMESTAMP},
        lastUser_id = #{lastUser_id,jdbcType=INTEGER},
        lastSubmitTime = #{lastSubmitTime,jdbcType=TIMESTAMP},
        label = #{label,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        position = #{position,jdbcType=INTEGER},
        viewCount = #{viewCount,jdbcType=INTEGER},
        locked = #{locked,jdbcType=BIT},
        hided = #{hided,jdbcType=BIT},
        deleted = #{deleted,jdbcType=BIT},
        content = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="net.industryhive.bean.Notice">
        update notice
        set user_id = #{user_id,jdbcType=INTEGER},
        submitTime = #{submitTime,jdbcType=TIMESTAMP},
        lastUser_id = #{lastUser_id,jdbcType=INTEGER},
        lastSubmitTime = #{lastSubmitTime,jdbcType=TIMESTAMP},
        label = #{label,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        position = #{position,jdbcType=INTEGER},
        viewCount = #{viewCount,jdbcType=INTEGER},
        locked = #{locked,jdbcType=BIT},
        hided = #{hided,jdbcType=BIT},
        deleted = #{deleted,jdbcType=BIT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <!--=============================================================================================================-->
    <resultMap extends="ResultMapWithBLOBs" id="ResultMapWithUsername" type="net.industryhive.bean.wrap.WrapNotice">
        <result column="username" jdbcType="VARCHAR" property="username"/>
    </resultMap>
    <select id="findListWithUsername" resultMap="ResultMapWithUsername">
        SELECT n.id,n.submitTime,n.lastSubmitTime,n.label,n.title,n.viewCount,a.username,b.lastEdit
        FROM notice n,(SELECT user.id,user.username FROM user) a,(SELECT user.id,user.username lastEdit FROM user) b
        WHERE n.user_id=a.id AND n.hided=0 AND n.deleted=0 AND n.lastUser_id=b.id ORDER BY n.position ASC,n.submitTime DESC
    </select>
    <select id="findWithUsername" parameterType="java.lang.Integer" resultType="net.industryhive.bean.wrap.WrapNotice">
        SELECT n.id,n.submitTime,n.lastSubmitTime,n.label,n.title,n.content,n.viewCount,n.deleted,a.username,b.lastEdit
        FROM notice n,(SELECT user.id,user.username FROM user) a,(SELECT user.id,user.username lastEdit FROM user) b
        WHERE n.id=#{id} AND n.hided=0 AND n.deleted=0 AND n.user_id=a.id AND n.lastUser_id=b.id
    </select>
    <update id="updateViewCountByPrimaryKey" parameterType="java.lang.Integer">
        update notice set viewCount=viewCount+1 where id=#{id}
    </update>
    <!--=============================================================================================================-->
</mapper>
